(ns tiltontec.example.x01-counter
  (:require
   ["package:flutter/material.dart" :as m]
   ["package:flutter/painting.dart" :as p]
   [tiltontec.matrix.api :refer [cF cI cFn cFonce mpar mget mset! mswap! fm*] :as mx]
   [tiltontec.flutter-mx.core :as fx
    :refer [as-dart-callback in-my-context
            material-app scaffold app-bar floating-action-button
            center column text sized-box]]))

(def title-message "VOJO by QiMono")
(def message "Bit Demo")
(def original-number 2r100)
(def second-number (bit-shift-left original-number 1))
(def third-number (bit-shift-left 1 16))
(defn shift [x] (bit-shift-left x 1))

(defn make-app []
  (material-app
   {:title "Flutter/MX Counter Demo"
    :theme (m/ThemeData .primarySwatch m.Colors/amber)}
   (scaffold
    {:appBar
     (app-bar
      {:title (m/Text title-message)})
     :floatingActionButton
     (cF (floating-action-button
          {:onPressed (as-dart-callback []
                                        (mswap! (fm* :z-counter) :value shift))
           :tooltip   "Increment"}
          (m/Icon m.Icons/add .color m.Colors/black)))}
    (center
     (column {:mainAxisAlignment m.MainAxisAlignment/center}
             (text {:style (p/TextStyle .color m.Colors/blue
                                        .fontSize 40.0)}
                   message)
             (text {:style (p/TextStyle .fontSize 40.0)} 
                   "Original Number")
             (text {:style (p/TextStyle
                            .color m.Colors/green
                            .fontSize 40.0)} (str original-number))
             (text {:style (p/TextStyle .fontSize 40.0)} 
                   "Shift Left << 1")
             (text {:style (p/TextStyle 
                            .color m.Colors/red
                            .fontSize 40.0)} (str second-number))
             (text {:style (p/TextStyle .fontSize 40.0)} 
                   "Shifted Numbers")
             (text {:style (p/TextStyle .fontSize 40.0)} (str third-number))
             (sized-box {:height 14.0})
             (text
              {:style (in-my-context [me ctx]
                                     (.-headline4 (.-textTheme (m.Theme/of ctx))))}
              {:name  :z-counter
               :value (cI 4)}
              (str (mx/my-value))))))))


