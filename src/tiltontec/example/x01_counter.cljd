(ns tiltontec.example.x01-counter
  (:require
   [clojure.string :as str]
   ;[net.mikera/core.matrix as mx]
   ["package:flutter/material.dart" :as m]
   ["package:flutter/painting.dart" :as p]
   [tiltontec.matrix.api :refer [cF cI cFn cFonce mpar mget mset! mswap! fm*] :as mx]
   [tiltontec.flutter-mx.core :as fx
    :refer [as-dart-callback in-my-context
            material-app scaffold app-bar floating-action-button
            center column text sized-box]]))

(def S 
  ;starting node
  0)
(def i
  ;iterator
  0)

;; memo[i][1<< S]|1<<i = m[S][i]

(def title-message "VOJO By QiMono")

(def first-message "Starting Node:")
(def second-message "Lorem")
(def third-message "Ipsum")
(def fourth-message "Sit")

(def number-first 0)
;(def starting-node 0)
(def number-second 2)
(def number-third 3)
(def number-fourth 4)

(def raw-line "0 4 1 9 3 0 6 11 4 1 0 2 6 5 -4 0")
(def raw "
0 4 1 9 
3 0 6 11 
4 1 0 2 
6 5 -4 0")
(def lines (str/split-lines raw-line))
(def original-number lines)
(def second-number raw)
(def third-number (bit-shift-left 1 16))
(defn shift [x] (bit-shift-left x 1))
(defn plus [x] (+ x 1))
(defn minus [x] (- x 1))

(defn make-app []
  (material-app
   {:title "Flutter/MX Counter Demo"
    :theme (m/ThemeData .brightness m.Brightness/dark
                        .primarySwatch m.Colors/blue)}
   (scaffold
    {:appBar
     (app-bar
      {:title (m/Text title-message)})
     :floatingActionButton
     (cF (floating-action-button
          {:onPressed (as-dart-callback []
                                        (mswap! (fm* :z-counter) :value plus))
           :tooltip   "Increment"}
          (m/Icon m.Icons/add .color m.Colors/black)))}
    (center
     (column {:mainAxisAlignment m.MainAxisAlignment/center}
             (text {:style (p/TextStyle .color m.Colors/blue
                                        .fontSize 40.0)}
                   first-message)
             (text {:style (p/TextStyle
                            .color m.Colors/blue
                            .fontSize 20.0)} (str number-first))
             (text {:style (p/TextStyle .fontSize 40.0)} 
                   second-message)
             (text {:style (p/TextStyle
                            .color m.Colors/green
                            .fontSize 20.0)} (str number-second))
             (text {:style (p/TextStyle .fontSize 40.0)} 
                   third-message)
             (text {:style (p/TextStyle 
                            .color m.Colors/red
                            .fontSize 40.0)} (str number-third))
             (text {:style (p/TextStyle .fontSize 40.0)} 
                   fourth-message)
             (text {:style (p/TextStyle .fontSize 40.0)} (str number-fourth))
             (sized-box {:height 14.0})
             (text
              {:style (in-my-context [me ctx]
                                     (.-headline4 (.-textTheme (m.Theme/of ctx))))}
              {:name  :z-counter
               :value (cI i)}
              (str (mx/my-value))))))))

(comment
  make-app
  )


